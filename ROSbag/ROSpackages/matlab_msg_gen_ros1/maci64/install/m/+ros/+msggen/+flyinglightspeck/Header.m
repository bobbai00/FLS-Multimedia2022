
classdef Header < ros.Message
    %Header MATLAB implementation of flyinglightspeck/Header
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'flyinglightspeck/Header' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '66b9cabc2b3d6cb39a39fae4d7d2ae1f' % The MD5 Checksum of the message definition
        PropertyList = { 'Duration' 'Id' 'Coordinate' 'Color' } % List of non-constant message properties
        ROSPropertyList = { 'duration' 'id' 'coordinate' 'color' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Duration
        Id
        Coordinate
        Color
    end
    methods
        function set.Duration(obj, val)
            val = val(:);
            validAttributes = {'vector', 'numel', 2};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'Header', 'Duration')
            obj.Duration = val;
        end
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Header', 'Id');
            obj.Id = uint32(val);
        end
        function set.Coordinate(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'Header', 'Coordinate');
            obj.Coordinate = single(val);
        end
        function set.Color(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 4};
            validateattributes(val, validClasses, validAttributes, 'Header', 'Color');
            obj.Color = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.flyinglightspeck.Header.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.flyinglightspeck.Header(strObj);
        end
    end
end
